
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: minios.pipecd.kanatakita.com
spec:
  group: pipecd.kanatakita.com
  names:
    kind: Minio
    listKind: MinioList
    plural: minios
    singular: minio
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Minio is the Schema for the minios API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MinioSpec defines the desired state of Minio
          properties:
            replicas:
              description: number of replicas
              format: int32
              minimum: 0
              type: integer
            secret:
              description: secret for PipeCD EncryptionKey & Minio AccessKey and SecretKey
              format: string
              properties:
                defaultMode:
                  description: 'Optional: mode bits to use on created files by default.
                    Must be a value between 0 and 0777. Defaults to 0644. Directories
                    within the path are not affected by this setting. This might be
                    in conflict with other options that affect the file mode, like
                    fsGroup, and the result can be other mode bits set.'
                  format: int32
                  type: integer
                items:
                  description: If unspecified, each key-value pair in the Data field
                    of the referenced Secret will be projected into the volume as
                    a file whose name is the key and content is the value. If specified,
                    the listed keys will be projected into the specified paths, and
                    unlisted keys will not be present. If a key is specified which
                    is not present in the Secret, the volume setup will error unless
                    it is marked optional. Paths must be relative and may not contain
                    the '..' path or start with '..'.
                  items:
                    description: Maps a string key to a path within a volume.
                    properties:
                      key:
                        description: The key to project.
                        type: string
                      mode:
                        description: 'Optional: mode bits to use on this file, must
                          be a value between 0 and 0777. If not specified, the volume
                          defaultMode will be used. This might be in conflict with
                          other options that affect the file mode, like fsGroup, and
                          the result can be other mode bits set.'
                        format: int32
                        type: integer
                      path:
                        description: The relative path of the file to map the key
                          to. May not be an absolute path. May not contain the path
                          element '..'. May not start with the string '..'.
                        type: string
                    required:
                    - key
                    - path
                    type: object
                  type: array
                optional:
                  description: Specify whether the Secret or its keys must be defined
                  type: boolean
                secretName:
                  description: 'Name of the secret in the pod''s namespace to use.
                    More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                  type: string
              type: object
            storage:
              description: Storage spec to specify how storage shall be used. Reference
                of https://github.com/prometheus-operator/prometheus-operator
              format: string
              properties:
                emptyDir:
                  description: 'EmptyDirVolumeSource to be used by the Prometheus
                    StatefulSets. If specified, used in place of any volumeClaimTemplate.
                    More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
                  properties:
                    medium:
                      description: 'What type of storage medium should back this directory.
                        The default is "" which means to use the node''s default medium.
                        Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                      type: string
                    sizeLimit:
                      description: 'Total amount of local storage required for this
                        EmptyDir volume. The size limit is also applicable for memory
                        medium. The maximum usage on memory medium EmptyDir would
                        be the minimum value between the SizeLimit specified here
                        and the sum of memory limits of all containers in a pod. The
                        default is nil which means that the limit is undefined. More
                        info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                      type: string
                  type: object
                volumeClaimTemplate:
                  description: A PVC spec to be used by the Prometheus StatefulSets.
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    spec:
                      description: 'Spec defines the desired characteristics of a
                        volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                      properties:
                        accessModes:
                          description: 'AccessModes contains the desired access modes
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: This field requires the VolumeSnapshotDataSource
                            alpha feature gate to be enabled and currently VolumeSnapshot
                            is the only supported data source. If the provisioner
                            can support VolumeSnapshot data source, it will create
                            a new volume and data will be restored to the volume at
                            the same time. If the provisioner does not support VolumeSnapshot
                            data source, volume will not be created and the failure
                            will be reported as an event. In the future, we plan to
                            support more data source types and the behavior of the
                            provisioner may change.
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource
                                being referenced. If APIGroup is not specified, the
                                specified Kind must be in the core API group. For
                                any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: 'Resources represents the minimum resources
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                          properties:
                            limits:
                              additionalProperties:
                                type: string
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                type: string
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        selector:
                          description: A label query over volumes to consider for
                            binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        storageClassName:
                          description: 'Name of the StorageClass required by the claim.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        volumeMode:
                          description: volumeMode defines what type of volume is required
                            by the claim. Value of Filesystem is implied when not
                            included in claim spec. This is a beta feature.
                          type: string
                        volumeName:
                          description: VolumeName is the binding reference to the
                            PersistentVolume backing this claim.
                          type: string
                      type: object
                  type: object
              type: object
            version:
              description: version of docker.io/minio/minio
              format: string
              type: string
          type: object
        status:
          description: MinioStatus defines the observed state of Minio
          properties:
            availableReplicas:
              description: this is equal deployment.status.availableReplicas of mongodb
              format: int32
              type: integer
          required:
          - availableReplicas
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
